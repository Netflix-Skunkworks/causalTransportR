% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aipw.R
\name{aipw}
\alias{aipw}
\title{AIPW estimation under unconfoundedness}
\usage{
aipw(
  y,
  a,
  X,
  treatProb = NULL,
  nuisMod = c("rlm", "rf"),
  estimator = c("AIPW", "IPW", "OM"),
  hajekize = FALSE,
  separateMus = TRUE,
  glmnet_lamchoice = "lambda.min",
  glmnet_alpha = 1,
  glmnet_rho_family = "binomial",
  glmnet_pi_family = "binomial",
  glmnet_mu_family = "gaussian",
  glmnet_parl = FALSE,
  grf_tunerf = "none",
  noi = FALSE
)
}
\arguments{
\item{y}{outcome vector (may contain missings ; missings must correspond with s = 0)}

\item{a}{treatment vector (no missings; can be relaxed with some tinkering)}

\item{X}{covariate matrix (no missings)}

\item{treatProb}{propensity score vector (of length n_treatment) or matrix (n_treatment X n_obs), where latter is for covariate adaptive designs; must sum to 1. NULL by default, so pscore is fitted. When provided, no propensity score is fit. With discrete covariates, estimated propensity score is advisable even if treatment was randomized.}

\item{nuisMod}{one of c("rlm", "rf") : choose how to fit nuisance functions (cross-fit).}

\item{estimator}{one of c("AIPW", "IPW", "OM"). The default is AIPW.}

\item{hajekize}{boolean for whether to divide the inverse probability weights term for each treatment level by the sum of weights in that treatment level. This guards against instability from very large weights from extremely small selection or propensity scores.}

\item{separateMus}{boolean for whether to fit separate outcome models for each treatment group or a single pooled model. The former is recommended and is the default, but a pooled model may be fit when data is scarce / computation is burdensome.}

\item{glmnet_lamchoice}{choice of lambda (shrinkage parameter) for regularized linear regressions. Only relevant when nuisMod == "rlm"}

\item{glmnet_alpha}{in [0, 1], choice of alpha in glmnet. 1 (default) corresponds with L1 regularization (LASSO) and 0 corresponds with L2 regularization (ridge), while intermediate values correspond with a mix of the two (elastic net)}

\item{glmnet_rho_family}{GLM family for selection model. "binomial" by default but can be safely switched to "gaussian" for linear probability models with discrete covariates for faster compute}

\item{glmnet_pi_family}{GLM family for propensity model. "binomial" by default but can be safely switched to "gaussian" for linear probability models with discrete covariates for faster compute}

\item{glmnet_mu_family}{GLM family for outcome model. Gaussian by default.}

\item{glmnet_parl}{Boolean for parallelization in glmnet. Need to enable parallelized cluster beforehand.}

\item{grf_tunerf}{Tune rf hyperparameters? Passed to grf's regression forest. Use 'all' for hyperparameter tuning.}

\item{noi}{boolean for printing marginal means and causal contrasts table (it gets returned anyway). off by default.}
}
\value{
list containing treatment effects table , nuisance function estimates, and influence function values
}
\description{
Simplified version of `ateGT` with no selection indicator. Imputes counterfactual outcome for each observation i under each treament a as
\deqn{Y^a = \frac{A = a}{\pi^a (X)} (Y - \mu^a(X)) + \mu^a(X) }
Average treatment effects are defined as averages of differences between counterfactual outcomes \eqn{Y^a - Y^{a'}}.
and returns marginal means, causal contrasts, and their influence-function based variance estimates. Uses same underlying nuisance function fitter as `ateGT` with no missing data or surrogates.
}
\examples{
# simulation with no selection bias (generate by passing null function for selection)
df2 = selDGP(selF = NULL)
df2$tau |> mean() # true effect : sinh(1)
# lasso
aipw(df2$y, df2$a, df2$X, noi = FALSE, nuisMod = "rlm")$res
# random forest
aipw(df2$y, df2$a, df2$X, noi = FALSE, nuisMod = "rf")$res
}
